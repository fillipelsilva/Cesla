// <auto-generated />
using System;
using Cesla.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cesla.Data.Migrations
{
    [DbContext(typeof(CeslaContext))]
    partial class CeslaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cesla.Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("cargo_tb", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1402),
                            DepartamentoId = 1,
                            Nome = "Gerente Administrativo",
                            Salario = 12000.00m
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1440),
                            DepartamentoId = 1,
                            Nome = "Assistente Administrativo",
                            Salario = 3000.00m
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1454),
                            DepartamentoId = 1,
                            Nome = "Secret�ria Executiva",
                            Salario = 5000.00m
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1468),
                            DepartamentoId = 1,
                            Nome = "Analista Administrativo",
                            Salario = 6000.00m
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1481),
                            DepartamentoId = 1,
                            Nome = "Coordenador de Recursos Humanos",
                            Salario = 7000.00m
                        },
                        new
                        {
                            Id = 6,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1496),
                            DepartamentoId = 1,
                            Nome = "Recepcionista",
                            Salario = 2500.00m
                        },
                        new
                        {
                            Id = 7,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1510),
                            DepartamentoId = 1,
                            Nome = "Controlador de Documentos",
                            Salario = 4000.00m
                        },
                        new
                        {
                            Id = 8,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1523),
                            DepartamentoId = 1,
                            Nome = "Supervisor de Escrit�rio",
                            Salario = 5500.00m
                        },
                        new
                        {
                            Id = 9,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1537),
                            DepartamentoId = 1,
                            Nome = "Analista de Compras",
                            Salario = 6500.00m
                        },
                        new
                        {
                            Id = 10,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1551),
                            DepartamentoId = 1,
                            Nome = "Gerente de Facilidades",
                            Salario = 8000.00m
                        },
                        new
                        {
                            Id = 11,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1565),
                            DepartamentoId = 1,
                            Nome = "Analista Financeiro",
                            Salario = 7500.00m
                        },
                        new
                        {
                            Id = 12,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1579),
                            DepartamentoId = 1,
                            Nome = "Assistente de Contabilidade",
                            Salario = 3500.00m
                        },
                        new
                        {
                            Id = 13,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1593),
                            DepartamentoId = 1,
                            Nome = "Analista de Planejamento",
                            Salario = 7000.00m
                        },
                        new
                        {
                            Id = 14,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1606),
                            DepartamentoId = 1,
                            Nome = "Coordenador de Eventos",
                            Salario = 4500.00m
                        },
                        new
                        {
                            Id = 15,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1620),
                            DepartamentoId = 1,
                            Nome = "Analista de Projetos",
                            Salario = 6500.00m
                        },
                        new
                        {
                            Id = 16,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1633),
                            DepartamentoId = 1,
                            Nome = "Especialista em Conformidade",
                            Salario = 7000.00m
                        },
                        new
                        {
                            Id = 17,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1668),
                            DepartamentoId = 1,
                            Nome = "Gerente de Comunica��es Internas",
                            Salario = 7500.00m
                        },
                        new
                        {
                            Id = 18,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1682),
                            DepartamentoId = 1,
                            Nome = "Analista de Suprimentos",
                            Salario = 6000.00m
                        },
                        new
                        {
                            Id = 19,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1695),
                            DepartamentoId = 1,
                            Nome = "Assistente de Log�stica",
                            Salario = 3500.00m
                        },
                        new
                        {
                            Id = 20,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 291, DateTimeKind.Local).AddTicks(1709),
                            DepartamentoId = 1,
                            Nome = "Administrador de Contratos",
                            Salario = 6500.00m
                        });
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("colaborador_tb", (string)null);
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("departamento_tb", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 289, DateTimeKind.Local).AddTicks(2248),
                            EmpresaId = 1,
                            Nome = "Administrativo"
                        });
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("empresa_tb", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 289, DateTimeKind.Local).AddTicks(2219),
                            EnderecoId = 1,
                            Nome = "Cesla",
                            Telefone = "1101234567"
                        });
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Cidade");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Estado");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("Numero");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pais");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Rua");

                    b.HasKey("Id");

                    b.ToTable("endereco_tb", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CEP = "21345678",
                            Cidade = "Rio de Janeiro",
                            DataCadastro = new DateTime(2024, 5, 26, 17, 37, 23, 289, DateTimeKind.Local).AddTicks(2152),
                            Estado = "RJ",
                            Numero = 20,
                            Pais = "Brasil",
                            Rua = "Rua Teste"
                        });
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Cargo", b =>
                {
                    b.HasOne("Cesla.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Cargos")
                        .HasForeignKey("DepartamentoId")
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Colaborador", b =>
                {
                    b.HasOne("Cesla.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Colaboradores")
                        .HasForeignKey("CargoId")
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Departamento", b =>
                {
                    b.HasOne("Cesla.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Departamentos")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("Cesla.Domain.Entities.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("Cesla.Domain.Entities.Empresa", "EnderecoId")
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Cargos");
                });

            modelBuilder.Entity("Cesla.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Departamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
